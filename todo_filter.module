<?php
// $Id: markdown.module,v 1.1.2.3 2008/06/02 15:46:45 goba Exp $

// == Core hooks ===============================================================

function todo_filter_help($path = 'admin/help#todo_filter', $arg) {
  switch ($path) {
    case 'admin/help#todo_filter':
      return t('<p>The Todo style allows you to enter content using <a href="http://daringfireball.net/projects/markdown">Markdown</a>, a simple plain-text syntax that is transformed into valid XHTML.</p>');
      break;
  }
}

function todo_filter_menu() {
	$items = array();
	$items['todo/toggle'] = array(
		'title' => 'Todo Toggle',
		'description' => t("provide todo toggle"),
		'page callback' => 'todo_filter_toggle',
		'page arguments' => array(2),
		'access callback' => '_todo_node_access',
		'access arguments' => array(2)
	);
	return $items;
}

function todo_filter_toggle($code){
  list($nid,$i) = explode('-',$code,2);
  $node = node_load($nid);
  preg_match_all("/\[(_|\/)\](.*)/",$node->body,$out);
  $change_to = ($out[1][$i] == '_') ? '/' : '_';
  $node->body = str_replace($out[0][$i],"[$change_to] ".trim($out[2][$i]),$node->body);
  print_r($node);
  node_save($node);
  unset($node);
  exit;
  return '';
}

function _todo_node_access($nid){
  return true;
}

/**
 * Implementation of hook_filter().
 */
function todo_filter_filter($op, $delta = 0, $format = -1, $text = '') {
  switch ($op) {
    case 'list':
      return array(t('Todo Style'));
    case 'description':
      return t('Allows content to be submitted and display in todo style.');
    case 'settings':
      return _todo_filter_settings($format);
    case 'process':
      return _todo_filter_process($text, $format);
    default:
      return $text;
  }
}

function todo_filter_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  global $_todo_filter_vars;
  switch ($op) {
    case 'view':
      drupal_add_js(drupal_get_path('module', 'todo_filter') .'/todo_filter.js', 'module');
      drupal_add_css(drupal_get_path('module', 'todo_filter') .'/todo_filter.css', 'module');
      //drupal_add_js(array('todo_filter'=>array('nid'=>$node->nid)), 'setting');
      $node->content['body']['#value'] = str_replace('class="todo-check" rel="','class="todo-check" rel="'.$node->nid.'-',$node->content['body']['#value']);
    break;
  }
}

/**
 * Implementation of hook_block().
 *
 * Provides help for markdown syntax.
 */
/*
function todo_filter_block($op = 'list', $delta = 0, $edit = array()) {
  switch($op) {
    case 'list':
      return array('help' => array('info' => t('Markdown filter tips')));
    case 'view':
      switch($delta) {
        case 'help':
          return array(
            'subject' => t('Markdown filter tips'),
            'content' => _markdown_help_block()
          );
      }
  }
}*/


/**
 * Implementation of hook_filter_tips().
 */
function todo_filter_filter_tips($delta = 0, $format = -1, $long) {
  if ($long) {
    return t('Quick Tips:<ul>
      <li>Two or more spaces at a line\'s end = Line break</li>
      <li>Double returns = Paragraph</li>
      <li>*Single asterisks* or _single underscores_ = <em>Emphasis</em></li>
      <li>**Double** or __double__ = <strong>Strong</strong></li>
      <li>This is [a link](http://the.link.example.com "The optional title text")</li>
      </ul>For complete details on the Markdown syntax, see the <a href="http://daringfireball.net/projects/markdown/syntax">Markdown documentation</a> and <a href="http://michelf.com/projects/php-markdown/extra/">Markdown Extra documentation</a> for tables, footnotes, and more.');
  }
  else {
    return t('You can use <a href="@filter_tips">Markdown syntax</a> to format and style the text. Also see <a href="@markdown_extra">Markdown Extra</a> for tables, footnotes, and more.', array('@filter_tips' => url('filter/tips'), '@markdown_extra' => 'http://michelf.com/projects/php-markdown/extra/'));
  }
}

// == Internal functions =======================================================

/**
 * Provides content for the markdown help block.
 */
function _todo_filter_help_block(){
  return '<pre>'. t("
## Header 2 ##
### Header 3 ###
#### Header 4 ####
##### Header 5 #####
(Hashes on right are optional)

Link [Drupal](http://drupal.org)

Inline markup like _italics_,
 **bold**, and `code()`.

> Blockquote. Like email replies
>> And, they can be nested

* Bullet lists are easy too
- Another one
+ Another one

1. A numbered list
2. Which is numbered
3. With periods and a space

And now some code:
    // Code is indented text
    is_easy() to_remember();") .'</pre>';
}

/**
 * Filter process callback.
 */
function _todo_filter_process($text, $format) {
  global $_todo_filter_vars;
  if (!empty($text)) {
    preg_match_all("/\[(_|\/)\](.*)/",$text,$out);
    foreach($out[0] as $i => $item){
      if($out[1][$i] == '/') $checked=' checked'; else $checked='';
      $replace = '<div class="todo-item'.$checked.'"><input type="checkbox" class="todo-check" rel="'.$i.'"'.$checked.'/>'.$out[2][$i].'</div>';
      $text = str_replace($item,$replace,$text);
    }
  }
  return $text;
}

/**
 * Filter settings callback. Just provides a version overview.
 */
function _todo_filter_settings($format) {
  // include_once drupal_get_path('module', 'markdown') .'/markdown.php';
  $form['markdown_wrapper'] = array(
    '#type' => 'fieldset',
    '#title' => t('Markdown'),
  );
  $links = array(
    'Markdown PHP Version: <a href="http://www.michelf.com/projects/php-markdown/">'. MARKDOWN_VERSION .'</a>',
    'Markdown Extra Version: <a href="http://www.michelf.com/projects/php-markdown/">'. MARKDOWNEXTRA_VERSION .'</a>',
  );
  $form['markdown_wrapper']['markdown_status'] = array(
    '#title' => t('Versions'),
    '#type' => 'item',
    '#value' => theme('item_list', $links),
  );
  return $form;
}
